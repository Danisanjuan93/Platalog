<?php

namespace Proxies\__CG__\EntityBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Finca extends \EntityBundle\Entity\Finca implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'id', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'users', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'orders', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'activity', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'note', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'estateType', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'irrigationType', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'plantVariety', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'totalBananaTree', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'fincaRegister', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'location', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'fincaName'];
        }

        return ['__isInitialized__', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'id', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'users', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'orders', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'activity', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'note', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'estateType', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'irrigationType', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'plantVariety', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'totalBananaTree', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'fincaRegister', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'location', '' . "\0" . 'EntityBundle\\Entity\\Finca' . "\0" . 'fincaName'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Finca $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsers($users)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsers', [$users]);

        return parent::setUsers($users);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', []);

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrders($orders)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrders', [$orders]);

        return parent::setOrders($orders);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrders()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrders', []);

        return parent::getOrders();
    }

    /**
     * {@inheritDoc}
     */
    public function setEstateType($estateType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEstateType', [$estateType]);

        return parent::setEstateType($estateType);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstateType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstateType', []);

        return parent::getEstateType();
    }

    /**
     * {@inheritDoc}
     */
    public function setIrrigationType($irrigationType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIrrigationType', [$irrigationType]);

        return parent::setIrrigationType($irrigationType);
    }

    /**
     * {@inheritDoc}
     */
    public function getIrrigationType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIrrigationType', []);

        return parent::getIrrigationType();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlantVariety($plantVariety)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlantVariety', [$plantVariety]);

        return parent::setPlantVariety($plantVariety);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlantVariety()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlantVariety', []);

        return parent::getPlantVariety();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalBananaTree($totalBananaTree)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalBananaTree', [$totalBananaTree]);

        return parent::setTotalBananaTree($totalBananaTree);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalBananaTree()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalBananaTree', []);

        return parent::getTotalBananaTree();
    }

    /**
     * {@inheritDoc}
     */
    public function setFincaRegister($fincaRegister)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFincaRegister', [$fincaRegister]);

        return parent::setFincaRegister($fincaRegister);
    }

    /**
     * {@inheritDoc}
     */
    public function getFincaRegister()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFincaRegister', []);

        return parent::getFincaRegister();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation($location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', [$location]);

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', []);

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setFincaName($fincaName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFincaName', [$fincaName]);

        return parent::setFincaName($fincaName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFincaName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFincaName', []);

        return parent::getFincaName();
    }

    /**
     * {@inheritDoc}
     */
    public function addUser(\EntityBundle\Entity\UserFinca $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUser', [$user]);

        return parent::addUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUser(\EntityBundle\Entity\UserFinca $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUser', [$user]);

        return parent::removeUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function addOrder(\EntityBundle\Entity\Orders $order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrder', [$order]);

        return parent::addOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrder(\EntityBundle\Entity\Orders $order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrder', [$order]);

        return parent::removeOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function addActivity(\EntityBundle\Entity\Activity $activity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addActivity', [$activity]);

        return parent::addActivity($activity);
    }

    /**
     * {@inheritDoc}
     */
    public function removeActivity(\EntityBundle\Entity\Activity $activity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeActivity', [$activity]);

        return parent::removeActivity($activity);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivity', []);

        return parent::getActivity();
    }

    /**
     * {@inheritDoc}
     */
    public function addNote(\EntityBundle\Entity\Note $note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNote', [$note]);

        return parent::addNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNote(\EntityBundle\Entity\Note $note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNote', [$note]);

        return parent::removeNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getNote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNote', []);

        return parent::getNote();
    }

    /**
     * {@inheritDoc}
     */
    public function addFincaRegister(\EntityBundle\Entity\FincaRegister $fincaRegister)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFincaRegister', [$fincaRegister]);

        return parent::addFincaRegister($fincaRegister);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFincaRegister(\EntityBundle\Entity\FincaRegister $fincaRegister)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFincaRegister', [$fincaRegister]);

        return parent::removeFincaRegister($fincaRegister);
    }

}
