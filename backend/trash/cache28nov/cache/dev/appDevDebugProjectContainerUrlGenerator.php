<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'command_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CommandBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_note' => array (  0 =>   array (    0 => 'fincaId',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\NoteController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fincaId',    ),    1 =>     array (      0 => 'text',      1 => '/api/notes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_note' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\NoteController::postAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/notes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_note' => array (  0 =>   array (    0 => 'note',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\NoteController::deleteAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'note',    ),    1 =>     array (      0 => 'text',      1 => '/api/notes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_note' => array (  0 =>   array (    0 => 'note',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\NoteController::patchAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'note',    ),    1 =>     array (      0 => 'text',      1 => '/api/notes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_finca' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/fincas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_finca' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaController::postAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/fincas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_finca_estatetype' => array (  0 =>   array (    0 => 'finca',    1 => 'state',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaController::patchEstatetypeAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'state',    ),    1 =>     array (      0 => 'text',      1 => '/estatetypes',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'finca',    ),    3 =>     array (      0 => 'text',      1 => '/api/fincas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_finca_irrigationtype' => array (  0 =>   array (    0 => 'finca',    1 => 'irrigationtype',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaController::patchIrrigationtypeAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'irrigationtype',    ),    1 =>     array (      0 => 'text',      1 => '/irrigationtypes',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'finca',    ),    3 =>     array (      0 => 'text',      1 => '/api/fincas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_finca_plantvariety' => array (  0 =>   array (    0 => 'finca',    1 => 'plantvariety',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaController::patchPlantvarietyAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'plantvariety',    ),    1 =>     array (      0 => 'text',      1 => '/plantvarieties',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'finca',    ),    3 =>     array (      0 => 'text',      1 => '/api/fincas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_finca_totalbananatree' => array (  0 =>   array (    0 => 'finca',    1 => 'bananaTree',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaController::patchTotalbananatreeAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'bananaTree',    ),    1 =>     array (      0 => 'text',      1 => '/totalbananatrees',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'finca',    ),    3 =>     array (      0 => 'text',      1 => '/api/fincas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_activity' => array (  0 =>   array (    0 => 'finca',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ActivityController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'finca',    ),    1 =>     array (      0 => 'text',      1 => '/api/activities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_activity_finished' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ActivityController::getFinishedAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/activity/finished',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_activity' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ActivityController::postAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/activities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_activity_state' => array (  0 =>   array (    0 => 'activity',    1 => 'state',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ActivityController::patchStateAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'state',    ),    1 =>     array (      0 => 'text',      1 => '/states',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'activity',    ),    3 =>     array (      0 => 'text',      1 => '/api/activities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_activity' => array (  0 =>   array (    0 => 'activity',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ActivityController::deleteAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'activity',    ),    1 =>     array (      0 => 'text',      1 => '/api/activities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_historic' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\HistoricController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/historic',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_historic' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\HistoricController::postAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/historics',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_orders' => array (  0 =>   array (    0 => 'fincaId',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\OrdersController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fincaId',    ),    1 =>     array (      0 => 'text',      1 => '/api/orders',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_orders' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\OrdersController::postAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/orders',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_orders' => array (  0 =>   array (    0 => 'orders',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\OrdersController::deleteAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orders',    ),    1 =>     array (      0 => 'text',      1 => '/api/orders',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_orders_state' => array (  0 =>   array (    0 => 'orders',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\OrdersController::patchStateAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/state',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orders',    ),    2 =>     array (      0 => 'text',      1 => '/api/orders',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_parcel' => array (  0 =>   array (    0 => 'fincaId',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ParcelController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fincaId',    ),    1 =>     array (      0 => 'text',      1 => '/api/parcels',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_parcel' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ParcelController::postAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/parcels',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_parcel' => array (  0 =>   array (    0 => 'parcel',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ParcelController::deleteAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parcel',    ),    1 =>     array (      0 => 'text',      1 => '/api/parcels',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_parcel' => array (  0 =>   array (    0 => 'parcel',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ParcelController::patchAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parcel',    ),    1 =>     array (      0 => 'text',      1 => '/api/parcels',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_users_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\UsersController::postRegisterAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/users/registers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\UsersController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_users_workers' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\UsersController::getWorkersAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workers',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\UsersController::patchAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_users_finca' => array (  0 =>   array (    0 => 'finca',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\UsersController::patchFincaAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/finca',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'finca',    ),    2 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_users_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\UsersController::patchLogoutAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/users/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_fincaregister' => array (  0 =>   array (    0 => 'idFinca',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaRegisterController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idFinca',    ),    1 =>     array (      0 => 'text',      1 => '/api/fincaregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_fincaregister' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaRegisterController::postAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/fincaregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_fincaregister_benefits' => array (  0 =>   array (    0 => 'fincaRegister',    1 => 'benefits',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaRegisterController::patchBenefitsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'benefits',    ),    1 =>     array (      0 => 'text',      1 => '/benefits',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fincaRegister',    ),    3 =>     array (      0 => 'text',      1 => '/api/fincaregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_fincaregister_sownparcel' => array (  0 =>   array (    0 => 'fincaRegister',    1 => 'sownParcel',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaRegisterController::patchSownparcelAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sownParcel',    ),    1 =>     array (      0 => 'text',      1 => '/sownparcels',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fincaRegister',    ),    3 =>     array (      0 => 'text',      1 => '/api/fincaregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_fincaregister_collectparcel' => array (  0 =>   array (    0 => 'fincaRegister',    1 => 'collectParcel',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaRegisterController::patchCollectparcelAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'collectParcel',    ),    1 =>     array (      0 => 'text',      1 => '/collectparcels',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fincaRegister',    ),    3 =>     array (      0 => 'text',      1 => '/api/fincaregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_fincaregister_collectweight' => array (  0 =>   array (    0 => 'fincaRegister',    1 => 'weight',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaRegisterController::patchCollectweightAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'weight',    ),    1 =>     array (      0 => 'text',      1 => '/collectweights',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fincaRegister',    ),    3 =>     array (      0 => 'text',      1 => '/api/fincaregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_fincaregister_registerdate' => array (  0 =>   array (    0 => 'fincaRegister',    1 => 'registerDate',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaRegisterController::patchRegisterdateAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'registerDate',    ),    1 =>     array (      0 => 'text',      1 => '/registerdates',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fincaRegister',    ),    3 =>     array (      0 => 'text',      1 => '/api/fincaregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_fincaregister_handsnumber' => array (  0 =>   array (    0 => 'fincaRegister',    1 => 'handsNumber',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaRegisterController::patchHandsnumberAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'handsNumber',    ),    1 =>     array (      0 => 'text',      1 => '/handsnumbers',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fincaRegister',    ),    3 =>     array (      0 => 'text',      1 => '/api/fincaregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_fincaregister_salablepercent' => array (  0 =>   array (    0 => 'fincaRegister',    1 => 'salablePercent',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaRegisterController::patchSalablepercentAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'salablePercent',    ),    1 =>     array (      0 => 'text',      1 => '/salablepercents',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fincaRegister',    ),    3 =>     array (      0 => 'text',      1 => '/api/fincaregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_fincaregister' => array (  0 =>   array (    0 => 'fincaRegister',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\FincaRegisterController::deleteAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fincaRegister',    ),    1 =>     array (      0 => 'text',      1 => '/api/fincaregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_parcelregister' => array (  0 =>   array (    0 => 'idParcel',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ParcelRegisterController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idParcel',    ),    1 =>     array (      0 => 'text',      1 => '/api/parcelregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_parcelregister' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ParcelRegisterController::postAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/parcelregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_parcelregister' => array (  0 =>   array (    0 => 'parcelRegister',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ParcelRegisterController::deleteAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parcelRegister',    ),    1 =>     array (      0 => 'text',      1 => '/api/parcelregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_patch_parcelregister_data' => array (  0 =>   array (    0 => 'parcelRegister',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\ParcelRegisterController::patchDataAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/data',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parcelRegister',    ),    2 =>     array (      0 => 'text',      1 => '/api/parcelregisters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'entity_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EntityBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reset/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reset/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reset/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/reset/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_oauth_server_authorize' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\OAuthServerBundle\\Controller\\AuthorizeController::authorizeAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/oauth/v2/auth',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_oauth_server_token' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_oauth_server.controller.token:tokenAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/oauth/v2/token',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
